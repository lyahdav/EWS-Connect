h1. EWS Connect

This is a simple test application that uses cURL to post data to Exchange Web Services. 

What it does:

* After creating an event, the event will be created on the Exchange server using EWS.
* When deleting an event, the event will be deleted on the Exchange server using EWS.
* When editing an event, the original event will be deleted from the Exchange server and a new one will be created.

If testing this out for yourself, it is a very basic rails application with a single event model to keep things simple.
There is a non-versioned file called app_config.yml that you will need to create. It should look like this:

pre. @development:
  domain: localhost:3000
  ews_user_name: yourusername
  ews_user_password: yourpassword
  ews_endpoint: https://yourserver/ews/exchange.asmx

test:
  domain: test.host
  ews_user_name: yourusername
  ews_user_password: yourpassword
  ews_endpoint: https://yourserver/ews/exchange.asmx

production:
  domain: example.com
  ews_user_name: yourusername
  ews_user_password: yourpassword
  ews_endpoint: https://yourserver/ews/exchange.asmx@ 

h2. Other resources

h3. ViewPoint

This is a great gem for working with EWS. In my case, HTTPClient failed to authenticate against the server.
After many failed attempts to fix the problem, I decided to go with the cURL approach.

The author of this gem is also very helpful and responsive.

See: "zenchild/viewpoint":http://github.com/zenchild/Viewpoint 

h3. curb

Ruby bindings for curl. I didn't use it in this example because my needs were very simple, but take a look.

See: "curb":http://github.com/taf2/curb

h3. ews-api

Another gem for working with EWS. "ews-api":http://github.com/jrun/ews-api


